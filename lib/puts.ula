section code

; putchar(int c)
export putchar
func_local putchar  bp_c
	aload bp_c -1 bp_c
	copy bp_c (sp)
	glk 0x0080 1 ~  ; glk_put_char
	return bp_c

; fputc(int c, FILE *stream)
export fputc
func_local fputc  bp c
	aload bp -1 c
	copy c (sp)
	aload bp -2 (sp)
	glk 0x0081 2 ~  ; glk_put_char_stream
	return c

; fputs(strid_t *stream, const char *s)
; Writes s to stream and returns the length of s.
export fputs
func_local fputs  bp s stream i s_i
	aload bp -1 s
	aload bp -2 stream
	copy 0 i
:fputs_loop
	aloadb s i s_i
	jz s_i :fputs_end
	copy s_i (sp)
	copy stream (sp)
	glk 0x0081 2 ~  ; glk_put_char_stream
	add i 1 i
	jump :fputs_loop
:fputs_end
	return i
	
; puts(const char *s)
; Writes s + "\n" to the current stream and returns the length of s + 1.
export puts
func_local puts  bp s i s_i
	aload bp -1 s
	copy 0 i
:puts_loop
	aloadb s i s_i
	jz s_i :puts_end
	copy s_i (sp)
	glk 0x0080 1 ~  ; glk_put_char
	add i 1 i
	jump :puts_loop
:puts_end
	copy 10 (sp)
	glk 0x0080 1 ~  ; glk_put_char
	add i 1 i
	return i
